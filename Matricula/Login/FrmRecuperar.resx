<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAASAAAAB4CAMAAABl99+cAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAC0UExURf///8ghJwAAAC8vL8suNPzx8U9PT/XV1o+Pj/jj5G9vb9ZYXM88Qdlmaq+vr19fX39/
        fw8PD+/v7z8/P+edoM/Pz9/f3x8fH7+/v/j4+Kenp+np6dJJTv329xUVFZeXl8jIyLy8vM01OuKJjffh
        4dx0dxoaGoKCgummqdNPVOuusOOQk/HIyu22uNtucssvNVhYWDk5OSkpKWdnZ0ZGRt9/gvDCxOy0ttdf
        Y/PQ0dBCR3V1deaABcwAAA0gSURBVHhe7Zx5Q+I8EMa7LVTBAwEBEUTFYxV1xXuV7/+93mcmk160SRDX
        7fLy+8MtaY6ZJ5Oj13pr/jVqb2c7w/EPYjz8/XK1IemFqAIVKlAZD3fOJudyopDzycvvDy5RGV+7FCgP
        5zdDcjRFZWdSldPz5BX4Mb54ldM5vL9sS7aYbVMBsOXAb8mrOJfUec6W6I7b32JwlspLfq2FBX6Mb/JF
        fcvRk9neP5IsOUgeIxXJq9iQ1AxFjjixUegtcVGTbDHnxgKVm3mPb4vkIe73Jdc8ksOIg0CVgl5z40Zq
        KaJyJRk1+zztGNi+lZzC0YucKOK6aL6T80bsAv2a72N3qltSi4FfyZCo7kiqiRvJzJybwkdRuZO8GeS0
        EZtARXW7UfuQaowM4wit2b0lEpq+q5XRQjZMFXLSiEWg4XJL5fn8ypJHpJCboGBHCnjvtgEpTCR/Cjln
        xCzQ9TKzD1FzU+haRUTVLX6ICy7gnd/LbyvvqkAKOWXEKNDS+jh7oPw1Ll8ZeG2qukYcpvYcX+SUEZNA
        eXUuzKtUZoGGgG3BS0NL0yKKvrA5KeSMEZNAeVG5OBdSm5n7qvcuh45ce96VHLoxP53KCSMGgc4kcUmq
        btPohec+XBRXNccJWogm9gg5YaRYoLFhj74QjiPHLdISjBcZYMTchk7SjRQLlL91+ARVqfCvMzckJN1I
        oUBfFkCe90uq/Ntsiz0Rkm6kUCD7DLRxN7m7dVno7qTKv072mkySjRQKZLmhdXQmG5xr+7XI0WKT6Z8j
        dQ0HJNlIkUBz4Zjm6FryAXusOVyxfgvpm1/LCSRb+SJSK1Pm9sM8tvsR38VY7NFIspEigSxrWOoS+pck
        FjKRjH+dzEIvqUaKBDLvom8ll+JDUgtZcI/858jcopZUI0UCmVenfcmlSNeRQ00yOnC9k5jdXLj/vUCJ
        zLiQVCNFAklCAelJxSqQkyUE39ytLjBljfk+j3OJzDImqUYKBKrsG0nft7EL5LbOV/S4fpMEKx96UnGc
        5TJX9JJqpCiCFuGrBIoHgGtExJs1tyu5zNosqUa+RyCn+4qJrZfjHYDE8uk2zWXWW0k1UiKBkhOE2+Vb
        clFyeRqSveMhqUZKJFDSXbdbYcnr6fTCWsC/LVByF5feaBWQatfp1u63CjTe/hgOh/TcPnuJM4+TQMl4
        cDIkZbuTpN8g0HDnbP/t9ry62N0iJ4EkL+M056Zsd5L0jwpU2Tq7++xjxNUXaHiz1COOFRfoY3+Z9xeI
        lRZox3q7x84KC7RjufXqxsoK9GF+x8+ZVRXo4qse/ayoQF/26HA1Bap80fAiVlKgpd69y7CKAhW/PPsJ
        VlCgTFVLsnoC3X/Fy2UxqyeQfYAdvZ7tDLfHFWB5TA1WTiDruy/Vl8Rd43QdeaycQNnXILK8pt5d/R8K
        ZLl6z9ze/P8JdC0/CzjKvP3//xPIMsKyjxxWWqCUWfrOt+UiI/sIarUFSt1mlkfclk1Q9vuae0kv5l8W
        KHXJpZ6J2yKCMyVY6X1Q+nG1csT2QhRnSrAl6cWUVCCnNwAqiSVdZl/LIjbnruV9RvAvC5QopD9dsj0p
        zU7Sb5JeTEkFcvw65JfMyXd6e5ypZo7M20oV+4VtSQVyfT35/uLqbnIWvzVmi6CjtL85H2JlKalAC38/
        I1gn3dSHokOHO/slFWixL/hirK/1ehuJcHO5c1RSgT77EUmq4QJeX4bjH/dDy3+OoSmpQE6t5LHct+A5
        lFSguWsCV+zr9oKUVaDPztIO69JilFWgz05C9ourBSmrQJ/+ku1rPgiPKatAC3+opT8LsX7gtCClFcip
        VMz9uRx89TpWWoHc3j+PmER3Mr44hMorUBQSLkCV6HHOF77aAcorkHcmpxz4wEVDdANgkf/YxC5miQVK
        fp5spkJvI8a5t5zfLttI3nPLp8QCeTXH7XSFX2ZNzFmu09D52L4rKLNA3oaTQkqf1N57xymGqHrru1al
        FsjbcDBvLEGQmrJc/gOzN9qLWt8FKbdAXs16a3FLzyKZz5ltr3FWVcRZr91KLpDnXRmvOSpxBGQ/jh0a
        V6grGb3W6ar0AnnVs0KJKi+JFX3+s7ThpGAqqu5HbtueE/0DAsGfq9wF/yP9/5Ae1eYp2BFV5TQhSYVU
        XZC8CkkzI3kVkmbEsuzUJhepD97Hv/e/5EuM1aL2fje52p+8vb4XRMaaNWvWrFmzZs2aNWvWrFmzZs2a
        NWvWrPku+t1uXw7/PoNuS44+STcINtXRQRAcet5eEByr30/Bs+e1gqDu1YOgq9JO6Ww7iBh4h3L0MD1U
        quy2fdDepWOcPOC/RLshOUD/IQg66hANEs9PXCJBB5VKAWpR+/msjqdcijnwTuToIdykbJFP3acRbOnN
        Io2eIu+Og2CmjmCAOqBmTuQwpuP7dXW06/uotuH7TaVG2+9BIN8PvWM+Q+Bsx2uSAoqutylHAHKhOfnB
        teIk3I6zXOr2D/FDmkWVgu4FoY4k9BhBLYpjsNf34XBA/yp2vQM5ApfQXft0qC2lRGKAY1GD7FTWwAD+
        1ztFUkMdJsgRCJIQsUD488BJsBT1N/1RXWiR941NUL/0/SfPO0GHHXY7x+g5JY36iyx7DaQ1xdJntDJS
        4YEG9zY3ZyGc6UU9DfrkHWKYoMO2OpzhUAQSG+odEuiZjJg9sqXiEzk8O+kehFBI1fyTCisTSKCALYgE
        miKpmTSByROIvEoKhEOfooOa/CkqaZQGYADduNu5X2AyykUCcZY+Tio3uxBTl0ODHDkD+CGWMAgy5FFB
        xZHAFng9OmSBmvybQWt7fNCHQgPxqY8uwwAH1Ad88OhPm9SNgCOdx4UWCOGFBiVQY3IE6vk9kjYhEMYY
        F1QW5wvkPVBD6AXVQ+1gTiAWms/CulZPwkMLRA41o0mKgiyAyegP0PRRkr1BhKKdQoHIwo74BKMlEf3B
        IwDZThvSCEzoqclECwQzB4EeKjE5AuGA5q+EQLCUvblkaQoEevQvud0H5S+RFUg1QWEQ0ljhmIgEorKn
        6gjAqU1lAmj6YahMn/mPiMNigdBBLfEJEakt6XS4XxoY1hgEPLGhMVgD3yKBAoQ3TJVJICJHIKoa2RIC
        UdfDKHQf9WjTv6QBDzCaIu/RYaioS6MhmJ2qUMgKBK9pFoSRu9Qwh0cskJaPwXQxoDp5kEAgjDjK1vN/
        RgKJEag7EggH6Enl06WoG9Hi4XWp+hoCddFHKCwCodAxGShrW0SeQPASc0VSIFgK3VEhGckzAgOr4H2P
        VljMwG1S5QSzAPFMU1FWoL6qbcph/ug/UlosUBwHoEcmoHVeViAQ5mzoiSxdLZAGNSJ5REZggnpEZcqn
        aF7XwAkYheLUHgnU58lEBFLVtvXaEZEnELmE7U5CIIyxKRnNYd70m2QNwMSErMJIVDiYKeMjaWKBVG3o
        SXIbMULhkS8QjmnWe1bLCgRCPuhZhwWRQGIEzEduoUmltECZ+eSBQwrDgFohgcjlmQiEDpBIEFs1uQL1
        A380SAoEtZp9ZOUhkJ2DZru7u4d7iKtoBmkdYh1HV2QFUkMMRoR7e3uYT0mnWCAYEK0hSK0jD6qhJDIe
        47LjjfAzGmIqJwGBpmTETyxcMFH51KM5UdE5QOig8QBVQhnSiQXiyUQJhCH8jJOonP2NQWUcxZwFxqjs
        kLmREoiUVXXOC6S8hwMNr1uvixZo+mROIDQB+7EMCRQesUAwTi3LHGQaCgPu3Ut/hjYGBQKp2CMRtECY
        r6VitbjwDkqBnlTO0GSiPKadmaD2ExooIO6mpix07ygpEMZY41FitmAVG2HMw0AMRQID6HROIIyLLpnf
        5g2eCo9IINpI6fGP/phyHpTAesEC1f3LJ/VvsUA0h2iBEJBqy8PdzZM2VwnXYKP0NmzD7MnKPvBZdCwP
        kxj0J5tP64/qUPrV4ouYWCAaY7pogUABJWOaVOsk1j2+DkkIRFtB5SDvJUl0KK4F6kALtesBD3pLxLOE
        Eghu81JhFAjzvxYIq4Ba0Vuo+YRqkuqR3tIC0c6SPOb+JOAwrx0xKOhPj4/r8J9qFYH4aikpEPpUBx8m
        6bZwkBCoTWMe2Zr13YND6INykUDtRmNKI2vU9fqjyAIWEQ2GOAsnZOsP4KGMe8ydCCs1gcIXkk0L5IsN
        uC6OBUJ46H2Q14FL08PTY3QaakPvqEglMY61QFSUPO5R5DE8N6RAfkVI9mmByPqkQOhuvWzG8wPcjwVC
        zRAQDSse8CMSSKA9JDpEnCE1eRERQvitwGjXEz483hWBYCjJFgmk2UwIxCVFIO+AhgEx7ZP9etXniUoL
        xO1TBVwCxCMz4qQBjUfPys/NUAnidcIQGfthKIE5C0NRYhpGIHLpD3OoMnBtzedjUludxF/iaY8zogHp
        Sa9FTeA3n/2pU8FTKDMZqgvDTbRIRnRVU8ch9WRdFSOw6QxDue5Hdmz36A/R2nxAuLNZp5H5XHYAa9V4
        GKAGqlPvoOGxRO+aNUvgef8BKUwGWdjmZ8MAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DXhMsoK///ofyoZpEJqxYHgAAAAASUVORK5CYII=
</value>
  </data>
</root>